FROM maven:3.9.9-eclipse-temurin-21@sha256:7308e0b86b752ff3bedfc50a8db8d0ce8f03b912ad2c109dbe154a988b74e4d7 AS build
WORKDIR /app

# First copy dependencies and resolve those to speed up container rebuilds on code changes
COPY pom.xml pom.xml
RUN mvn verify --fail-never

# Copy source code and build project
COPY src src
RUN mvn clean package

RUN jar xf target/hw-0.0.1-SNAPSHOT.jar
RUN jdeps --ignore-missing-deps -q  \
    --recursive  \
    --multi-release 17  \
    --print-module-deps  \
    --class-path 'BOOT-INF/lib/*'  \
    target/hw-0.0.1-SNAPSHOT.jar > deps.info
RUN jlink \
    --add-modules $(cat deps.info) \
    --strip-debug \
    --compress 2 \
    --no-header-files \
    --no-man-pages \
    --output /custom-jre

# Slim Debian image - without a JRE packaged - to use with JLink
FROM debian:bookworm-20241202-slim@sha256:1537a6a1cbc4b4fd401da800ee9480207e7dc1f23560c21259f681db56768f63
ENV JAVA_HOME=/opt/java/openjdk
ENV PATH ${JAVA_HOME}/bin:${PATH}
COPY --from=build /custom-jre $JAVA_HOME

COPY --from=build /app/target/hw-0.0.1-SNAPSHOT.jar /app/hw-0.0.1-SNAPSHOT.jar
CMD ["java", "-jar", "/app/hw-0.0.1-SNAPSHOT.jar"]
# docker build --no-cache -t hw .
# docker run --rm -it -p 8080:8080 hw
